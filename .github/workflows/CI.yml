name: CI

on:
  push:
    branches:
      - '*'
      - '*/**'

env:
  GO111MODULE: "on"
  MIN_PERCENT_FOR_COVERAGE: 80

jobs:
  go_get:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: |
          if [[ ${GITHUB_REF#refs/heads/} == 'main' || ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            echo "BRANCH=${PWD}" >> $GITHUB_ENV
          else
            echo "BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | perl -pe 's/--\d+//g')" >> $GITHUB_ENV
          fi

      - name: Check out code
        uses: actions/checkout@v2

      - name: Linters
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.46.2
          working-directory: ${{ env.BRANCH }}

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: |
          if [[ ${GITHUB_REF#refs/heads/} == 'main' || ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            echo "BRANCH=${PWD}" >> $GITHUB_ENV
          else
            echo "BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | perl -pe 's/--\d+//g')" >> $GITHUB_ENV
          fi

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Check out code
        uses: actions/checkout@v2

      - name: Unit tests
        run: |
          go test -v -count=1 -race -timeout=1m  ./...
        working-directory: ${{ env.BRANCH }}

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: |
          if [[ ${GITHUB_REF#refs/heads/} == 'main' || ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            echo "BRANCH=${PWD}" >> $GITHUB_ENV
          else
            echo "BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | perl -pe 's/--\d+//g')" >> $GITHUB_ENV
          fi
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Calc coverage
        run: go test -v -covermode=count -coverprofile=coverage.out  ./...
        working-directory: ${{ env.BRANCH }}

      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1.0.6
        with:
          working-directory: ${{ env.BRANCH }}

      - name: Is sufficient coverage
        run: |
          cd "${GITHUB_WORKSPACE}/.github/workflows"
          if [[ ${GITHUB_REF#refs/heads/} == 'main' || ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            python isc.py ${{ env.BRANCH }}/coverage.lcov $MIN_PERCENT_FOR_COVERAGE
          else
            python isc.py "${GITHUB_WORKSPACE}/"${{ env.BRANCH }}/coverage.lcov $MIN_PERCENT_FOR_COVERAGE
          fi
        working-directory: ${{ env.BRANCH }}

      - name: Coveralls
        if: !contains( "${NO_FILE}", "1" )
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: ${{ env.BRANCH }}/coverage.lcov
